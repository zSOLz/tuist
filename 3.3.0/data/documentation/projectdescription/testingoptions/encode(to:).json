{"identifier":{"url":"doc:\/\/io.tuist.ProjectDescription\/documentation\/ProjectDescription\/TestingOptions\/encode(to:)","interfaceLanguage":"swift"},"schemaVersion":{"major":0,"patch":0,"minor":3},"abstract":[{"text":"Inherited from ","type":"text"},{"type":"codeVoice","code":"RawRepresentable.encode(to:)"},{"text":".","type":"text"}],"variants":[{"paths":["\/documentation\/projectdescription\/testingoptions\/encode(to:)"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","primaryContentSections":[{"declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"encode","kind":"identifier"},{"text":"(","kind":"text"},{"text":"to","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"encoder","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Encoder","kind":"typeIdentifier","preciseIdentifier":"s:s7EncoderP"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"languages":["swift"],"platforms":["Linux"]}],"kind":"declarations"}],"metadata":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"encode","kind":"identifier"},{"text":"(","kind":"text"},{"text":"to","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Encoder","preciseIdentifier":"s:s7EncoderP","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"extendedModule":"Swift","modules":[{"name":"ProjectDescription"}],"externalID":"s:SYsSERzSi8RawValueSYRtzrlE6encode2toys7Encoder_p_tKF::SYNTHESIZED::s:18ProjectDescription14TestingOptionsV","symbolKind":"method","role":"symbol","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Self"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Encodable"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"RawValue"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Int"},{"text":".","type":"text"}]},"roleHeading":"Instance Method","title":"encode(to:)"},"hierarchy":{"paths":[["doc:\/\/io.tuist.ProjectDescription\/documentation\/ProjectDescription","doc:\/\/io.tuist.ProjectDescription\/documentation\/ProjectDescription\/Project","doc:\/\/io.tuist.ProjectDescription\/documentation\/ProjectDescription\/TestingOptions","doc:\/\/io.tuist.ProjectDescription\/documentation\/ProjectDescription\/TestingOptions\/RawRepresentable-Implementations"],["doc:\/\/io.tuist.ProjectDescription\/documentation\/ProjectDescription","doc:\/\/io.tuist.ProjectDescription\/documentation\/ProjectDescription\/Project","doc:\/\/io.tuist.ProjectDescription\/documentation\/ProjectDescription\/Scheme","doc:\/\/io.tuist.ProjectDescription\/documentation\/ProjectDescription\/TestingOptions","doc:\/\/io.tuist.ProjectDescription\/documentation\/ProjectDescription\/TestingOptions\/RawRepresentable-Implementations"]]},"sections":[],"references":{"doc://io.tuist.ProjectDescription/documentation/ProjectDescription/TestingOptions/RawRepresentable-Implementations":{"type":"topic","role":"collectionGroup","abstract":[],"kind":"article","title":"RawRepresentable Implementations","url":"\/documentation\/projectdescription\/testingoptions\/rawrepresentable-implementations","identifier":"doc:\/\/io.tuist.ProjectDescription\/documentation\/ProjectDescription\/TestingOptions\/RawRepresentable-Implementations"},"doc://io.tuist.ProjectDescription/documentation/ProjectDescription/TestingOptions":{"role":"symbol","url":"\/documentation\/projectdescription\/testingoptions","abstract":[{"type":"text","text":"Options to configure testing of autogenerated schemes."}],"navigatorTitle":[{"text":"TestingOptions","kind":"identifier"}],"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TestingOptions","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/io.tuist.ProjectDescription\/documentation\/ProjectDescription\/TestingOptions","title":"TestingOptions"},"doc://io.tuist.ProjectDescription/documentation/ProjectDescription/Scheme":{"identifier":"doc:\/\/io.tuist.ProjectDescription\/documentation\/ProjectDescription\/Scheme","role":"symbol","navigatorTitle":[{"text":"Scheme","kind":"identifier"}],"abstract":[{"type":"text","text":"A custom scheme for a project."}],"url":"\/documentation\/projectdescription\/scheme","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Scheme","kind":"identifier"}],"title":"Scheme","kind":"symbol","type":"topic"},"doc://io.tuist.ProjectDescription/documentation/ProjectDescription/Project":{"role":"symbol","abstract":[{"type":"text","text":"A project representation."}],"title":"Project","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Project","kind":"identifier"}],"navigatorTitle":[{"text":"Project","kind":"identifier"}],"type":"topic","url":"\/documentation\/projectdescription\/project","identifier":"doc:\/\/io.tuist.ProjectDescription\/documentation\/ProjectDescription\/Project","kind":"symbol"},"doc://io.tuist.ProjectDescription/documentation/ProjectDescription":{"title":"ProjectDescription","abstract":[{"text":"A framework that defines Tuistâ€™s manifests, like projects or workspaces.","type":"text"}],"type":"topic","identifier":"doc:\/\/io.tuist.ProjectDescription\/documentation\/ProjectDescription","url":"\/documentation\/projectdescription","kind":"symbol","role":"collection"},"doc://io.tuist.ProjectDescription/documentation/ProjectDescription/TestingOptions/encode(to:)":{"role":"symbol","abstract":[],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"encode","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"to"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s7EncoderP","text":"Encoder"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"identifier":"doc:\/\/io.tuist.ProjectDescription\/documentation\/ProjectDescription\/TestingOptions\/encode(to:)","type":"topic","title":"encode(to:)","url":"\/documentation\/projectdescription\/testingoptions\/encode(to:)","conformance":{"constraints":[{"code":"Self","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Encodable","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"RawValue","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Int","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"kind":"symbol"}}}